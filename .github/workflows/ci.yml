name: CI

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - run: cargo fmt -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Install ImageMagick
        run: |
          sudo apt update
          sudo apt install libwebp-dev
          wget https://imagemagick.org/archive/ImageMagick.tar.gz
          tar xf ImageMagick.tar.gz
          cd ImageMagick-*
          ./configure --enable-hdri --with-webp
          make -j$(nproc)
          sudo make install
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings

  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        toolchain:
          - stable
          - nightly
    name: Test ${{ matrix.toolchain }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install libwebp (Linux)
        run: |
          sudo apt update
          sudo apt install libwebp-dev
        if: runner.os == 'Linux'
      - name: Install libwebp (macOS)
        run: |
          brew update
          brew list webp || brew install webp
        if: runner.os == 'macOS'
      - name: Install ImageMagick
        run: |
          wget https://imagemagick.org/archive/ImageMagick.tar.gz
          tar xf ImageMagick.tar.gz
          cd ImageMagick-*
          ./configure --enable-hdri --with-webp
          make -j$(nproc)
          sudo make install
      - run: sudo ldconfig
        if: runner.os == 'Linux'
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - run: cargo build
      - run: cargo test
      - run: cargo doc